"""
파이썬에서 문자열은 단일인용부호(') 혹은 이중인용부호(") 를 사용하여 표현한다.
예를 들어, 아래 표현은 s 라는 변수에 가나다 라는 문자열을 할당하는 것으로 동일한 표현이다.
"""
s1 = "가나다"
s2 = '가나다'
print(s1)
print(s2)
print("-"*80)
"""
만약 여러 라인에 걸쳐 있는 문자열을 표현하고 싶다면, ' 또는  "를 연달아 3개를 사용한다.
"""
s3 = '''파이선은
재미있는 언어입니다.
참 배우기 쉽죠?
'''
print(s3)
s4 = '''파이선은
재미있는 언어입니다.
참 배우기 쉽죠?
'''
print(s4)

s5 = '''
    파이선은
    재미있는 언어입니다.
    참 배우기 쉽죠?
'''
print(s5)
s6 = '''
    파이선은
    재미있는 언어입니다.
    참 배우기 쉽죠?
'''
print(s6)
print("-"*80)
"""
리눅스나 Mac OS에서는 Newline이 \n으로 표현되지만, 윈도우즈에서 \r\n을 사용한다. 
하지만, 파이썬에서는 Universal Newline이 지원되어 모든 OS에서 공히 \n을 사용한다.
"""
s7 = "한사람\n두사람\n세사람"
print(s7)
print("-"*80)
"""
문자열은 내부적으로 str 이라는 클래스 타입인데, 파이썬의 문자열은 기본적으로 유니코드이고, 
한번 설정되면 다시 변경시킬 수 없는 Immutable 타입이다.
문자열은 인덱스를 사용하여 문자열 중 특정위치의 문자를 표현할 수 있다. 인덱스는 0로부터 시작하는데, 
문자열 s 에 대하여 첫번째 문자는 s[0], 두번째 문자는 s[1] 과 같이 표현된다.

파이썬에는 C, C# 등에서 존재하는 문자(char) 타입이 존재하지 않는다. 
따라서, 위의 예에서 s8[4]의 타입이 char가 아닌 문자열 str 타입이 된다. 참고로 type(변수명)은 해당 변수의 타입을 리턴한다.
"""
s8 = "qwerty"
print(s8)
print(type(s8))
temp = s8[4];
print(temp)
print(type(temp))
print("-"*80)
"""
문자열을 표현할 때, r'문자열' 과 같이 사용하면, 이는 Escape Sequence를 표현하지 않고 Raw String을 직접 사용한다는 것을 의미한다.
예를 들어, 윈도우즈에서 파일경로를 간략히 표현하기 위해 아래와 같이 Raw String 표현을 사용할 수 있다.
"""

path = "c:\temp\test.json"
print(path)

path = r"c:\temp\test.json"
print(path)
print("-"*80)

